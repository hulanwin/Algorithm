257. 二叉树的所有路径
给定一个二叉树，返回所有从根节点到叶子节点的路径。

说明: 叶子节点是指没有子节点的节点。

示例:
输入:

   1
 /   \
2     3
 \
  5

输出: ["1->2->5", "1->3"]
解释: 所有根节点到叶子节点的路径为: 1->2->5, 1->3


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;//用以保存返回值
        if(!root)//防止初值为NULL
        {
            return res;
        }

        if(!root->left && !root->right)//对于叶子节点的处理
        {
            res.push_back(to_string(root->val));//在返回值中填入当前叶子的值
        }
        else//对于非叶子节点的处理
        {
            if(root->left)//对左子树的处理
            {
                vector<string> left = binaryTreePaths(root->left);//将返回值保存在left中
                res.insert(res.end(), left.begin(), left.end());//将left追加到res的末尾
            }
            if(root->right)//右子树同理
            {
                vector<string> right = binaryTreePaths(root->right);
                res.insert(res.end(), right.begin(), right.end());
            }

            for(int i = 0; i < res.size(); i++)//对于非叶子节点，需要将路径表示出来
            {
                res[i].insert(0, "->");
                res[i].insert(0, to_string(root->val));
            }
        }
        return res;
    }
};