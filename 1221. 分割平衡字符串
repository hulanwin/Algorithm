1221. 分割平衡字符串
在一个「平衡字符串」中，'L' 和 'R' 字符的数量是相同的。
给出一个平衡字符串 s，请你将它分割成尽可能多的平衡字符串。
返回可以通过分割得到的平衡字符串的最大数量。

示例 1：
输入：s = "RLRRLLRLRL"
输出：4
解释：s 可以分割为 "RL", "RRLL", "RL", "RL", 每个子字符串中都包含相同数量的 'L' 和 'R'。

示例 2：
输入：s = "RLLLLRRRLR"
输出：3
解释：s 可以分割为 "RL", "LLLRRR", "LR", 每个子字符串中都包含相同数量的 'L' 和 'R'。

示例 3：
输入：s = "LLLLRRRR"
输出：1
解释：s 只能保持原样 "LLLLRRRR".
 
提示：
1 <= s.length <= 1000
s[i] = 'L' 或 'R'
分割得到的每个字符串都必须是平衡字符串。

解题思路
题目要求通过分割得到的最大数量，即尽可能多的分割。
定义一个变量balance，当balance为0时达到平衡
从左往右扫描字符串s，遇到L,balance - 1，遇到R，balance + 1
当balance为0时即，更新记录cnt ++
如果最后cnt==0，说明s只需要保持原样，返回1
【注意】看清楚题意：所有的输入s都是平衡字符串（即'L'和'R'的数量是相同的），所以不会有"RRRRLL"这样的输入

代码
class Solution {
public:
    int balancedStringSplit(string s) {
        int cnt = 0;
        int balance = 0;
        for(int i = 0; i < s.size(); i++){
            if(s[i] == 'L') balance --;
            if(s[i] == 'R') balance ++;
            if(balance == 0) cnt ++;
        }
        return cnt;
    }
};
