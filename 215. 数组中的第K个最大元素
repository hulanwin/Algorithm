215. 数组中的第K个最大元素
在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

示例 1:
输入: [3,2,1,5,6,4] 和 k = 2
输出: 5

示例 2:
输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4

说明:
你可以假设 k 总是有效的，且 1 ≤ k ≤ 数组的长度。

class Solution {
public:
    // 交换第i个元素和第j个元素
    void swap(vector<int>& nums, int i, int j){
        int t = nums[i];
        nums[i] = nums[j];
        nums[j] = t;
    }

    int partition(vector<int>& nums, int lo, int hi){
        int j = lo;                    // 记录nums[lo]位置
        int v = nums[lo];              // 切分元素

        for(int i = lo + 1; i <= hi; i++)
        {
            if(nums[i] < v)
            {
                j++;
                swap(nums, i, j);
            }
        }

        swap(nums, lo, j);
        // 此时nums[lo...j-1]<=nums[j]<=nums[j+1,hi]
        return j;
    }

    int findKthLargest(vector<int>& nums, int k) {
        int n = nums.size();
        int left = 0, right = n - 1, target = n - k;
        
        while(true)
        {
            int index = partition(nums, left, right);
            if(index == target)
                return nums[index];
            else if(index < target)
                left = index + 1;
            else
                right = index - 1;
        }
    }
};