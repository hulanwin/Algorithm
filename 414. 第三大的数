414. 第三大的数
给定一个非空数组，返回此数组中第三大的数。如果不存在，则返回数组中最大的数。要求算法时间复杂度必须是O(n)。

示例 1:
输入: [3, 2, 1]
输出: 1
解释: 第三大的数是 1.
示例 2:
输入: [1, 2]
输出: 2
解释: 第三大的数不存在, 所以返回最大的数 2 .
示例 3:
输入: [2, 2, 3, 1]
输出: 1

解释: 注意，要求返回第三大的数，是指第三大且唯一出现的数。
存在两个值为2的数，它们都排第二。

先排序后输出

class Solution {
public:
    int thirdMax(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        for(int i = nums.size()-1, count = 2; i > 0; i--) {
            //从后往前，遇到不同的数count减一，当count为0时，说明前面已经有两个不同的数，那么该数为第三大
            if(nums[i] != nums[i-1]) {
                count--;
            }
            if(count == 0)
                return nums[i-1];
        }
        return nums[nums.size()-1];//前面循环中没有return，说明不存在第三大，返回排序最后一位也就是最大值
    }
};