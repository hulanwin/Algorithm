剑指 Offer 53 - I. 在排序数组中查找数字 I
统计一个数字在排序数组中出现的次数。

示例 1:
输入: nums = [5,7,7,8,8,10], target = 8
输出: 2

示例 2:
输入: nums = [5,7,7,8,8,10], target = 6
输出: 0
 
限制：
0 <= 数组长度 <= 50000


class Solution {
public:
    int search(vector<int>& nums, int target) {
        int len=nums.size();
        int count=0;
        for(int i=0;i<len;i++){
            if(nums[i]==target){
                count++;
            }
        }
    return count;
    }
};

思路
先利用二分查找找到目标的下标，
若找不到，则直接返回0；
找到了，再以该下标为中心，向两边延伸。

代码
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int begin=0;
        int end=nums.size()-1;
        int it=-1;
        while(end>=begin)
        {
             int mid=begin+(end-begin)/2;        
             if(nums[mid]>target)end=mid-1;
             else if(nums[mid]==target)
             {
                 it=mid;
                 break;
             }
             else begin=mid+1;
        }
        if(it==-1)return 0;
        int left=it;
        int right=it;
        while(left>=0&&nums[left]==target)left--;
        while(right<nums.size()&&nums[right]==target)right++;
        return right-left-1;
    }
};
