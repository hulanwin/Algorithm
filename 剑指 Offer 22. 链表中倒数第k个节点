剑指 Offer 22. 链表中倒数第k个节点
输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。例如，一个链表有6个节点，从头节点开始，它们的值依次是1、2、3、4、5、6。这个链表的倒数第3个节点是值为4的节点。

示例：
给定一个链表: 1->2->3->4->5, 和 k = 2.
返回链表 4->5.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* getKthFromEnd(ListNode* head, int k) {
        if(!head || k <= 0) return NULL;    //原书鲁棒性1,3
        ListNode *p = head, *node = head;
        while(k--)  
        {
            if(!p)  return NULL;    //鲁棒性2,当链表的节点不足k个时候
            p = p->next;            //将p移动到第k+1个节点
        }
        while(p)             //离开循环时p=null，为第n+1个节点,node此时在1+(n+1)-(k+1)的位置上，正好是目标节点
        {
            p = p->next;
            node = node->next;
        }
        return node;
    }
};