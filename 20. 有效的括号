20. 有效的括号
给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。

有效字符串需满足：
左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。

示例 1:
输入: "()"
输出: true

示例 2:
输入: "()[]{}"
输出: true

示例 3:
输入: "(]"
输出: false

示例 4:
输入: "([)]"
输出: false

示例 5:
输入: "{[]}"
输出: true

解题思路
1.遇见左字符'{' '(' '[',将左字符入栈
2.遇见右字符'}' ')' ']'
   如果栈为空，说明括号无效（false）
   如果栈不为空，将栈顶字符出栈，与右字符进行匹配
   如果右字符不匹配，说明括号无效（false）
   如果右字符匹配，扫描下一个字符
3.扫描完所有字符之后
  栈为空，则说明括号有效（true）
  栈不为空，则说明括号无效（false）

代码

class Solution {
public:
    bool isValid(string s) {
        stack<char>s1;
	int len = s.length();
	for (int i = 0; i < len; i++) {
		char c = s[i];
		if (c == '{' || c == '[' || c == '(') {
			s1.push(c);
		}
		else {
			if (s1.empty())
				return false;
			char left = s1.top();
			s1.pop();
			if (left == '(' && c != ')')return false;
			if (left == '{' && c != '}')return false;
			if (left == '[' && c != ']')return false;
		}
	}
	return s1.empty();
    }
};
