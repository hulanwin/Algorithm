392. 判断子序列
给定字符串 s 和 t ，判断 s 是否为 t 的子序列。
你可以认为 s 和 t 中仅包含英文小写字母。字符串 t 可能会很长（长度 ~= 500,000），而 s 是个短字符串（长度 <=100）。
字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。（例如，"ace"是"abcde"的一个子序列，而"aec"不是）。

示例 1:
s = "abc", t = "ahbgdc"
返回 true.

示例 2:
s = "axc", t = "ahbgdc"
返回 false.

思路
1.同时循环s、t，当s[i] == t[j]时，记录下匹配的字符。
2.循环 j 依赖于内层 while 驱动，当匹配到值后，break内层循环。（防止 i 进度过快的情况）

class Solution {
public:
    bool isSubsequence(string s, string t) {
        std::string match;
        for (int i = 0, j = 0; i < s.size(), j < t.size(); i++) {
            while (j < t.size()) {
                if (t[j++] == s[i]) {
                    match += s[i];
                    break;
                }
            }
        }
        return match.size() == s.size();
    }
};
